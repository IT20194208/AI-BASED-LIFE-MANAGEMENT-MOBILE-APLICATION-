import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
from statsmodels.tsa.arima.model import ARIMA

# Step 1: Data Preprocessing
df = pd.read_csv('/content/drive/MyDrive/Dataset/expense_sample.csv')  # Load your dataset

# Convert 'Date' column to datetime
df['Date'] = pd.to_datetime(df['Date'])

# Set 'Date' as the index
df.set_index('Date', inplace=True)

# Ensure 'lkr' and 'Amount' columns contain numeric data
df['lkr'] = pd.to_numeric(df['lkr'], errors='coerce')
df['Amount'] = pd.to_numeric(df['Amount'], errors='coerce')

# Handle missing values (fill with mean or 0, adjust as needed)
df['lkr'].fillna(df['lkr'].mean(), inplace=True)
df['Amount'].fillna(0, inplace=True)

# Step 2: Time Series Analysis
# You can check stationarity, perform differencing, and plot ACF and PACF here.

# Step 3: Train an ARIMA Model
# Example order: p=1, d=1, q=1 (you may need to adjust these values)
model = ARIMA(df['Amount'], order=(1, 1, 1))
model_fit = model.fit()

# Step 4: Generate Predictions for the Next 30 Days
forecast_steps = 30
forecast = model_fit.forecast(steps=forecast_steps)

# Print the forecasted expenses for the next 30 days
print(f"Forecasted expenses for the next 30 days:")
print(forecast)

